# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - aspire

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      # Setup Node.js for React build
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      # Install and build React app
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Build React application
        run: |
          cd frontend
          npm run build

      # Move built React files to Flask static directory and copy services directory
      - name: Setup Flask to serve React
        run: |
          mkdir -p static
          cp -r frontend/dist/* static/
          cp backend/app.py .
          # Copy the auth directory and its contents
          mkdir -p auth
          cp -r backend/auth/* auth/
          # Copy the database directory and its contents
          mkdir -p database
          cp -r backend/database/* database/
          # Copy the models directory and its contents
          mkdir -p models
          cp -r backend/models/* models/

      # Create startup command for Azure
      - name: Create startup command
        run: |
          echo "gunicorn --bind=0.0.0.0:8000 app:app" > startup.sh
          chmod +x startup.sh

      # Zip everything for deployment
      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/
            !frontend/node_modules/
            
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_238CDA36CA3C4CC19DCE9DE7B84BFED5 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_E77E0296783847AFB9A262E19A6F3A97 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_D4606B2EE5304E36A6765D101ADF546A }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'aspire-asses'
          slot-name: 'Production'
          
